
// $Id: jarname.java,v 1.5 2012-01-05
18:42:34-08 - - $ // // // NAME //
jarname - Print out the name of the
current jar file. // // DESCRIPTION //
Makes use of the fact that the
java.class.path, when Java // is run
from a jar, is the name of the jar. //

import static java.lang.System.*;

class jarname { public static void main
(String[] args) { String jarpath =
getProperty ("java.class.path");
out.printf ("jarpath = \"%s\"%n",
jarpath); int lastslash =
jarpath.lastIndexOf ('/'); String
jarbase = lastslash < 0 ? jarpath :
jarpath.substring (lastslash + 1);
out.printf ("jarbase = \"%s\"%n",
jarbase); } }

//TEST// ./jarname >jartest.out //TEST//
mkpspdf jarlist.ps jarname.java
jartest*.out


// $Id: parseint.java,v 1.3 2012-01-05
15:13:14-08 - - $

// // Illustrate try-catch convert args
to integers. // Iterate over each
element of args and attempt to convert
it to // an integer. If it succeeds,
print the integer. If not, catch // the
error and print an error message. //

import static java.lang.System.*;

class parseint { public static void main
(String[] args) { for (int argi = 0;
argi < args.length; ++argi) { try { int
value = Integer.parseInt (args[argi]);
out.printf ("%s = %d%n", args[argi],
value); }catch (NumberFormatException
error) { out.printf ("%s: exn %s%n",
args[argi], error.getMessage()); } } } }

//TEST// ./parseint 214748 hello -33 ''
987 >parsetest.out //TEST// mkpspdf
parsetest.ps parseint.java parsetest.out


head	1.5;
access;
symbols;
locks;
comment	@# @;


1.5
date	2012.01.06.02.42.34;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.01.06.02.41.51;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.12.22.04.59.41;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.12.22.04.59.16;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.12.22.03.37.39;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: jarname.java,v 1.4 2012-01-05 18:41:51-08 - - $
//
//
// NAME
//    jarname - Print out the name of the current jar file.
//
// DESCRIPTION
//    Makes use of the fact that the java.class.path, when Java
//    is run from a jar, is the name of the jar.
//

import static java.lang.System.*;

class jarname {
   public static void main (String[] args) {
      String jarpath = getProperty ("java.class.path");
      out.printf ("jarpath = \"%s\"%n", jarpath);
      int lastslash = jarpath.lastIndexOf ('/');
      String jarbase = lastslash < 0 ? jarpath
                     : jarpath.substring (lastslash + 1);
      out.printf ("jarbase = \"%s\"%n", jarbase);
   }
}

//TEST// ./jarname >jartest.out
//TEST// mkpspdf jarlist.ps jarname.java jartest*.out

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: jarname.java,v 1.3 2011-12-21 20:59:41-08 - - $
d25 1
a25 2
//TEST// ./jarname >jartest1.out
//TEST// jarname >jartest2.out
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: jarname.java,v 1.2 2011-12-21 20:59:16-08 - - $
d25 4
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: jarname.java,v 1.1 2011-12-21 19:37:39-08 - - $
d18 1
a18 1
      int lastslash = jarpath.lastIndexOf ("/");
d20 1
a20 1
                     : jarpath.substring (lastslash);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d16 6
a21 2
      String jarfile = getProperty ("java.class.path");
      out.printf ("jarfile = \"%s\"%n", jarfile);
@

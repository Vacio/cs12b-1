%PDF-1.2
5 0 obj
<</Length 6 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
1 i
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/05/12)Tj
-0.659766 -12.8004 Td
(19:14:21)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 280.066 736.5 Tm
(pfmt.perl)Tj
-131.246 18 Td
($cmps012b-wm/Assignments/asg1j-jfmt-filesargs/misc/)Tj
/R10 10 Tf
-80.8199 -35.5 Td
[(1:)-600(#!/usr/bin/perl)]TJ
11 TL
T*[(2:)-600(# $Id: pfmt.perl,v 1.4 2012-01-05 19:14:21-08 - - $)]TJ
T*[(3:)-600(use strict;)]TJ
T*[(4:)-600(use warnings;)]TJ
(5:)'
T*[(6:)-600($0 =~ s|^.*/||;)]TJ
T*[(7:)-600(my $exit_status = 0;)]TJ
T*[(8:)-600(END {exit $exit_status})]TJ
T*[(9:)-600(sub note\(@\) {print STDERR "@_"};)]TJ
-6 -11 Td
[(10:)-600($SIG{'__WARN__'} = sub {note @_; $exit_status = 1};)]TJ
T*[(11:)-600($SIG{'__DIE__'} = sub {warn @_; exit};)]TJ
(12:)'
T*[(13:)-600(my $linelen = 65;)]TJ
T*[(14:)-600(if \(@ARGV and $ARGV[0] =~ m/^-\(.+\)/\) {)]TJ
T*[(15:)-600(   $linelen = $1;)]TJ
T*[(16:)-600(   die "Usage: $0 [-width] [filename...]\\n" if $linelen =~ m/\\D/;)]TJ
T*[(17:)-600(   shift @ARGV)]TJ
T*[(18:)-600(})]TJ
(19:)'
T*[(20:)-600(sub print_paragraph \(@\) {)]TJ
T*[(21:)-600(   my \(@words\) = @_;)]TJ
T*[(22:)-600(   print "\\n";)]TJ
T*[(23:)-600(   my $char_count = 0;)]TJ
T*[(24:)-600(   for my $word \(@words\) {)]TJ
T*[(25:)-600(      if \($char_count == 0\) {)]TJ
T*[(26:)-600(         print $word;)]TJ
T*[(27:)-600(         $char_count = length $word;)]TJ
T*[(28:)-600(      }else {)]TJ
T*[(29:)-600(         $char_count += 1 + length $word;)]TJ
T*[(30:)-600(         if \($char_count > $linelen\) {)]TJ
T*[(31:)-600(            print "\\n", $word;)]TJ
T*[(32:)-600(            $char_count = length $word;)]TJ
T*[(33:)-600(         }else {)]TJ
T*[(34:)-600(            print " ", $word;)]TJ
T*[(35:)-600(         })]TJ
T*[(36:)-600(      })]TJ
T*[(37:)-600(   })]TJ
T*[(38:)-600(   print "\\n" if $char_count > 0;)]TJ
T*[(39:)-600(})]TJ
(40:)'
T*[(41:)-600(push @ARGV, "-" unless @ARGV;)]TJ
T*[(42:)-600(for my $filename \(@ARGV\) {)]TJ
T*[(43:)-600(   open my $file, "<$filename" or warn "$0: $filename: $!\\n" and next;)]TJ
T*[(44:)-600(   my @output_words;)]TJ
T*[(45:)-600(   for \(;;\) {)]TJ
T*[(46:)-600(      my $input_line = <$file>;)]TJ
T*[(47:)-600(      last unless defined $input_line;)]TJ
T*[(48:)-600(      my @input_words = split " ", $input_line;)]TJ
T*[(49:)-600(      if \(@input_words\) {)]TJ
T*[(50:)-600(         push @output_words, @input_words;)]TJ
T*[(51:)-600(      }else {)]TJ
T*[(52:)-600(         print_paragraph @output_words if @output_words;)]TJ
T*[(53:)-600(         @output_words = \(\);)]TJ
T*[(54:)-600(      })]TJ
T*[(55:)-600(   })]TJ
T*[(56:)-600(   print_paragraph @output_words;)]TJ
T*[(57:)-600(   close $file;)]TJ
T*[(58:)-600(})]TJ
(59:)'
ET
Q
Q
endstream
endobj
6 0 obj
2942
endobj
14 0 obj
<</Length 15 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/05/12)Tj
-0.659766 -12.8004 Td
(19:17:45)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 293.554 736.5 Tm
(mkp)Tj
-144.734 18 Td
($cmps012b-wm/Assignments/asg1j-jfmt-filesargs/misc/)Tj
/R10 10 Tf
-80.8199 -35.5 Td
[(1:)-600(#!/bin/sh)]TJ
11 TL
T*[(2:)-600(# $Id: mkp,v 1.1 2012-01-05 19:16:54-08 - - $)]TJ
T*[(3:)-600(./pfmt.perl ../.score/*.dat >pfmt.output1)]TJ
T*[(4:)-600(./pfmt.perl -40 *.java >pfmt.output2)]TJ
T*[(5:)-600(mkpspdf pfmt.listing.ps pfmt.perl $0 pfmt.output*)]TJ
ET
Q
Q
endstream
endobj
15 0 obj
788
endobj
18 0 obj
<</Length 19 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/05/12)Tj
-0.659766 -12.8004 Td
(19:17:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 269.635 736.5 Tm
(pfmt.output1)Tj
-120.815 18 Td
($cmps012b-wm/Assignments/asg1j-jfmt-filesargs/misc/)Tj
/R10 10 Tf
-80.8199 -35.5 Td
(1:)Tj
11 TL
T*[(2:)-600(This is test file #1. This is test file #1. This is test file #1.)]TJ
T*[(3:)-600(This is test file #1. This is test file #1. This is test file #1.)]TJ
T*[(4:)-600(This is test file #1. This is test file #1.)]TJ
(5:)'
T*[(6:)-600(It is very regular and is used to check to see if word wrap)]TJ
T*[(7:)-600(works. It is very regular and is used to check to see if word)]TJ
T*[(8:)-600(wrap works. It is very regular and is used to check to see if)]TJ
T*[(9:)-600(word wrap works. It is very regular and is used to check to see)]TJ
-6 -11 Td
[(10:)-600(if word wrap works. It is very regular and is used to check to)]TJ
T*[(11:)-600(see if word wrap works. It is very regular and is used to check)]TJ
T*[(12:)-600(to see if word wrap works. It is very regular and is used to)]TJ
T*[(13:)-600(check to see if word wrap works. It is very regular and is used)]TJ
T*[(14:)-600(to check to see if word wrap works.)]TJ
(15:)'
T*[(16:)-600(Does it work with a one line paragraph?)]TJ
(17:)'
T*[(18:)-600($Id: input1.dat,v 1.1 2010-12-13 17:24:57-08 - - $)]TJ
(19:)'
(20:)'
T*[(21:)-600(This is another file of test data for test number two. Some lines)]TJ
T*[(22:)-600(are short. Other lines are very long lines, exceeding even the)]TJ
T*[(23:)-600(line length that checksource.perl likes to see and will complain)]TJ
T*[(24:)-600(about.)]TJ
(25:)'
T*[(26:)-600(Are multiple input blank lines squeezed to a single output blank)]TJ
T*[(27:)-600(line?)]TJ
(28:)'
T*[(29:)-600(What happens if there is only one word per line.)]TJ
(30:)'
T*[(31:)-600($Id: input2.dat,v 1.1 2010-12-13 17:24:57-08 - - $)]TJ
(32:)'
T*[(33:)-600(This paragraph is indented by a tab. Are tabs deleted at the)]TJ
T*[(34:)-600(front of the line?)]TJ
(35:)'
T*[(36:)-600(What about spaces? Do they work like pfmt.perl?)]TJ
(37:)'
T*[(38:)-600(a long word should be on a line by itself)]TJ
T*[(39:)-600(sometimesthereisaverylongwordwhichpokesoutsidethenormalmarginsometimesthereisave)]TJ
-19 -11 Td
(rylongwordwhichpokesoutsidethenormalmargin)Tj
19 -11 Td
[(40:)-600(if the word exceeds the margin)]TJ
(41:)'
T*[(42:)-600(This paragraph has lots of tabs on input. Tabs should be replaced)]TJ
T*[(43:)-600(by spaces on output.)]TJ
(44:)'
T*[(45:)-600(This paragraph has lots of leading spaces and trailing tabs on)]TJ
T*[(46:)-600(input.)]TJ
(47:)'
T*[(48:)-600($Id: input3.dat,v 1.1 2010-12-13 17:24:57-08 - - $)]TJ
ET
Q
Q
endstream
endobj
19 0 obj
2931
endobj
22 0 obj
<</Length 23 0 R>>
stream
q 0.1 0 0 0.1 0 0 cm
0 G
380 240 5360 7080 re
S
0.949219 g
380 7320 5360 180 re
f
0.699219 g
380 7320 720 360 re
f
0 g
q
10 0 0 10 0 0 cm BT
/R9 12 Tf
1 0 0 1 52.6641 752 Tm
(01/05/12)Tj
-0.659766 -12.8004 Td
(19:17:46)Tj
ET
Q
0.699219 g
5020 7320 720 360 re
f
1 G
1 g
q
10 0 0 10 0 0 cm BT
/R7 28.8 Tf
1 0 0 1 529.993 739.2 Tm
(1)Tj
ET
Q
0 G
0 g
q
10 0 0 10 0 0 cm BT
/R8 14 Tf
1 0 0 1 269.635 736.5 Tm
(pfmt.output2)Tj
-120.815 18 Td
($cmps012b-wm/Assignments/asg1j-jfmt-filesargs/misc/)Tj
/R10 10 Tf
-80.8199 -35.5 Td
(1:)Tj
11 TL
T*[(2:)-600(// $Id: jarname.java,v 1.5 2012-01-05)]TJ
T*[(3:)-600(18:42:34-08 - - $ // // // NAME //)]TJ
T*[(4:)-600(jarname - Print out the name of the)]TJ
T*[(5:)-600(current jar file. // // DESCRIPTION //)]TJ
T*[(6:)-600(Makes use of the fact that the)]TJ
T*[(7:)-600(java.class.path, when Java // is run)]TJ
T*[(8:)-600(from a jar, is the name of the jar. //)]TJ
(9:)'
-6 -11 Td
[(10:)-600(import static java.lang.System.*;)]TJ
(11:)'
T*[(12:)-600(class jarname { public static void main)]TJ
T*[(13:)-600(\(String[] args\) { String jarpath =)]TJ
T*[(14:)-600(getProperty \("java.class.path"\);)]TJ
T*[(15:)-600(out.printf \("jarpath = \\"%s\\"%n",)]TJ
T*[(16:)-600(jarpath\); int lastslash =)]TJ
T*[(17:)-600(jarpath.lastIndexOf \('/'\); String)]TJ
T*[(18:)-600(jarbase = lastslash < 0 ? jarpath :)]TJ
T*[(19:)-600(jarpath.substring \(lastslash + 1\);)]TJ
T*[(20:)-600(out.printf \("jarbase = \\"%s\\"%n",)]TJ
T*[(21:)-600(jarbase\); } })]TJ
(22:)'
T*[(23:)-600(//TEST// ./jarname >jartest.out //TEST//)]TJ
T*[(24:)-600(mkpspdf jarlist.ps jarname.java)]TJ
T*[(25:)-600(jartest*.out)]TJ
(26:)'
(27:)'
T*[(28:)-600(// $Id: parseint.java,v 1.3 2012-01-05)]TJ
T*[(29:)-600(15:13:14-08 - - $)]TJ
(30:)'
T*[(31:)-600(// // Illustrate try-catch convert args)]TJ
T*[(32:)-600(to integers. // Iterate over each)]TJ
T*[(33:)-600(element of args and attempt to convert)]TJ
T*[(34:)-600(it to // an integer. If it succeeds,)]TJ
T*[(35:)-600(print the integer. If not, catch // the)]TJ
T*[(36:)-600(error and print an error message. //)]TJ
(37:)'
T*[(38:)-600(import static java.lang.System.*;)]TJ
(39:)'
T*[(40:)-600(class parseint { public static void main)]TJ
T*[(41:)-600(\(String[] args\) { for \(int argi = 0;)]TJ
T*[(42:)-600(argi < args.length; ++argi\) { try { int)]TJ
T*[(43:)-600(value = Integer.parseInt \(args[argi]\);)]TJ
T*[(44:)-600(out.printf \("%s = %d%n", args[argi],)]TJ
T*[(45:)-600(value\); }catch \(NumberFormatException)]TJ
T*[(46:)-600(error\) { out.printf \("%s: exn %s%n",)]TJ
T*[(47:)-600(args[argi], error.getMessage\(\)\); } } } })]TJ
(48:)'
T*[(49:)-600(//TEST// ./parseint 214748 hello -33 '')]TJ
T*[(50:)-600(987 >parsetest.out //TEST// mkpspdf)]TJ
T*[(51:)-600(parsetest.ps parseint.java parsetest.out)]TJ
(52:)'
ET
Q
Q
endstream
endobj
23 0 obj
2779
endobj
4 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 12 0 R
>>
/Contents 5 0 R
>>
endobj
13 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 16 0 R
>>
/Contents 14 0 R
>>
endobj
17 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 20 0 R
>>
/Contents 18 0 R
>>
endobj
21 0 obj
<</Type/Page/MediaBox [0 0 612 792]
/Parent 3 0 R
/Resources<</ProcSet[/PDF /Text]
/Font 24 0 R
>>
/Contents 22 0 R
>>
endobj
3 0 obj
<< /Type /Pages /Kids [
4 0 R
13 0 R
17 0 R
21 0 R
] /Count 4
>>
endobj
1 0 obj
<</Type /Catalog /Pages 3 0 R
>>
endobj
12 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R/R11
11 0 R>>
endobj
16 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
20 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
24 0 obj
<</R8
8 0 R/R10
10 0 R/R7
7 0 R/R9
9 0 R>>
endobj
8 0 obj
<</BaseFont/Times-Roman/Type/Font
/Subtype/Type1>>
endobj
10 0 obj
<</BaseFont/Courier/Type/Font
/Encoding 25 0 R/Subtype/Type1>>
endobj
25 0 obj
<</Type/Encoding/Differences[
126/tilde]>>
endobj
7 0 obj
<</BaseFont/Helvetica-Bold/Type/Font
/Subtype/Type1>>
endobj
9 0 obj
<</BaseFont/Times-Bold/Type/Font
/Subtype/Type1>>
endobj
11 0 obj
<</BaseFont/Courier-Bold/Type/Font
/Subtype/Type1>>
endobj
2 0 obj
<</Producer(ESP Ghostscript 815.02)
/CreationDate(D:20120105191746)
/ModDate(D:20120105191746)>>endobj
xref
0 26
0000000000 65535 f 
0000010355 00000 n 
0000011056 00000 n 
0000010275 00000 n 
0000009737 00000 n 
0000000009 00000 n 
0000003001 00000 n 
0000010854 00000 n 
0000010650 00000 n 
0000010923 00000 n 
0000010716 00000 n 
0000010988 00000 n 
0000010403 00000 n 
0000009870 00000 n 
0000003021 00000 n 
0000003861 00000 n 
0000010473 00000 n 
0000010005 00000 n 
0000003881 00000 n 
0000006864 00000 n 
0000010532 00000 n 
0000010140 00000 n 
0000006885 00000 n 
0000009716 00000 n 
0000010591 00000 n 
0000010795 00000 n 
trailer
<< /Size 26 /Root 1 0 R /Info 2 0 R
/ID [<B2BA7FEBECAEED3087A174363824C524><B2BA7FEBECAEED3087A174363824C524>]
>>
startxref
11167
%%EOF
